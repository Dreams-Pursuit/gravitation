{
    "settings": {
        "react": {
          "createClass": "createReactClass", // Regex for Component Factory to use,
                                             // default to "createReactClass"
          "pragma": "React",  // Pragma to use, default to "React"
          "fragment": "Fragment",  // Fragment to use (may be a property of <pragma>), default to "Fragment"
          "version": "detect", // React version. "detect" automatically picks the version you have installed.
                               // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
                               // It will default to "latest" and warn if missing, and to "detect" in the future
          "flowVersion": "0.53" // Flow version
        },
        // "propWrapperFunctions": [
        //     // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
        //     "forbidExtraProps",
        //     {"property": "freeze", "object": "Object"},
        //     {"property": "myFavoriteWrapper"},
        //     // for rules that check exact prop wrappers
        //     {"property": "forbidExtraProps", "exact": true}
        // ],
        "componentWrapperFunctions": [
            // The name of any function used to wrap components, e.g. Mobx `observer` function. If this isn't set, components wrapped by these functions will be skipped.
            "observer", // `property`
            {"property": "styled"}, // `object` is optional
            {"property": "observer", "object": "Mobx"},
            {"property": "observer", "object": "<pragma>"} // sets `object` to whatever value `settings.react.pragma` is set to
        ],
        "formComponents": [
          // Components used as alternatives to <form> for forms, eg. <Form endpoint={ url } />
          "CustomForm",
          {"name": "Form", "formAttribute": "endpoint"}
        ],
        "linkComponents": [
          // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
          "Hyperlink",
          {"name": "Link", "linkAttribute": "to"}
        ]
      },
    "env": {
      "browser": true,
      "es6": true,
      "node": true
    },
    "plugins": [
        "react"
    ],
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:react/jsx-runtime"
    ],
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 2020,
        "sourceType": "module"
    },
    "globals": {
      "BigInt": true
    },
    "rules": {
      "react/jsx-uses-react": "error",
      "react/jsx-uses-vars": "error",
      "indent": [
        "warn",
        2
      ],
      "linebreak-style": [
        "error",
        "unix"
      ],
      "quotes": [
        "error",
        "double"
      ],
      "semi": [
        "error",
        "always"
      ],
      "no-loop-func": [
        "error"
      ],
      "block-spacing": [
        "error",
        "always"
      ],
      "camelcase": [
        "error"
      ],
      "eqeqeq": [
        "error",
        "always"
      ],
      "strict": [
        "error",
        "global"
      ],
      "brace-style": [
        "error",
        "1tbs",
        {
          "allowSingleLine": true
        }
      ],
      "comma-style": [
        "error",
        "last"
      ],
      "comma-spacing": [
        "error",
        {
          "before": false,
          "after": true
        }
      ],
      "eol-last": [
        "error"
      ],
      "func-call-spacing": [
        "error",
        "never"
      ],
      "key-spacing": [
        "error",
        {
          "beforeColon": false,
          "afterColon": true,
          "mode": "minimum"
        }
      ],
      "keyword-spacing": [
        "error",
        {
          "before": true,
          "after": true,
          "overrides": {
            "function": {
              "after": false
            }
          }
        }
      ],
      // "max-len": [
      //   "error",
      //   {
      //     // "code": 80,
      //     "ignoreUrls": true
      //   }
      // ],
      "max-nested-callbacks": [
        "error",
        {
          "max": 7
        }
      ],
      "new-cap": [
        "error",
        {
          "newIsCap": true,
          "capIsNew": false,
          "properties": true
        }
      ],
      "new-parens": [
        "error"
      ],
      "no-lonely-if": [
        "error"
      ],
      "no-trailing-spaces": [
        "error"
      ],
      "no-unneeded-ternary": [
        "error"
      ],
      "no-whitespace-before-property": [
        "error"
      ],
      "object-curly-spacing": [
        "error",
        "always"
      ],
      "operator-assignment": [
        "error",
        "always"
      ],
      "operator-linebreak": [
        "error",
        "after"
      ],
      "semi-spacing": [
        "error",
        {
          "before": false,
          "after": true
        }
      ],
      "space-before-blocks": [
        "error",
        "always"
      ],
      "space-before-function-paren": [
        "error",
        {
          "anonymous": "never",
          "named": "never",
          "asyncArrow": "always"
        }
      ],
      "space-in-parens": [
        "error",
        "never"
      ],
      "space-infix-ops": [
        "error"
      ],
      "space-unary-ops": [
        "error",
        {
          "words": true,
          "nonwords": false,
          "overrides": {
            "typeof": false
          }
        }
      ],
      "no-unreachable": [
        "error"
      ],
      "no-global-assign": [
        "error"
      ],
      "no-self-compare": [
        "error"
      ],
      "no-unmodified-loop-condition": [
        "error"
      ],
      "no-constant-condition": [
        "error",
        {
          "checkLoops": false
        }
      ],
      "no-console": [
        "off"
      ],
      "no-useless-concat": [
        "error"
      ],
      "no-useless-escape": [
        "error"
      ],
      "no-shadow-restricted-names": [
        "error"
      ],
      "no-use-before-define": [
        "error",
        {
          "functions": false
        }
      ],
      "arrow-parens": [
        "error",
        "always"
      ],
      "arrow-body-style": [
        "error",
        "as-needed"
      ],
      "arrow-spacing": [
        "error"
      ],
      "no-confusing-arrow": [
        "error",
        {
          "allowParens": true
        }
      ],
      "no-useless-computed-key": [
        "error"
      ],
      "no-useless-rename": [
        "error"
      ],
      "no-var": [
        "error"
      ],
      "object-shorthand": [
        "error",
        "always"
      ],
      "prefer-arrow-callback": [
        "error"
      ],
      "prefer-const": [
        "error"
      ],
      "prefer-numeric-literals": [
        "error"
      ],
      "prefer-rest-params": [
        "error"
      ],
      "prefer-spread": [
        "error"
      ],
      "rest-spread-spacing": [
        "error",
        "never"
      ],
      "template-curly-spacing": [
        "error",
        "never"
      ]
    }
  }
  